# A string used to distinguish different Supabase projects on the same host. Defaults to the
# working directory name when running `supabase init`.
project_id = "worshiplead"

[api]
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API endpoints.
# public and storage are always included.
schemas = ["public", "storage", "graphql_public"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returned from a table or view. Limits payload size for accidental or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by db diff command to initialize the shadow database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW server_version;` on the remote database to check.
major_version = 15

[db.pooler]
# Port to use for the local connection pooler.
port = 54329

[realtime]
# Set to false to disable realtime functionality.
enabled = true
# Bind realtime via either IPv4 or IPv6. (default: IPv4)
ip_version = "IPv4"

[studio]
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://localhost:54321"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
# Port to use for the email testing server web interface.
port = 54324
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 54325
# pop3_port = 54326

[storage]
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[auth]
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604800 (1 week).
jwt_expiry = 86400
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

# Custom email template for organization invitations
[auth.email.template.invite]
subject = "You've been invited to join {{ .OrganizationName }} on Worship Lead"
content_path = "./supabase/templates/invite.html"

# Uncomment to customize email template
# [auth.email.template.confirmation]
# subject = "Confirm your signup"
# content_path = "./supabase/templates/confirmation.html"

# Uncomment to customize email template
# [auth.email.template.recovery]
# subject = "Reset your password"
# content_path = "./supabase/templates/recovery.html"

# Uncomment to customize email template
# [auth.email.template.email_change]
# subject = "Confirm your email change"
# content_path = "./supabase/templates/email_change.html"

# Uncomment to customize email template
# [auth.email.template.magic_link]
# subject = "Your magic link"
# content_path = "./supabase/templates/magic_link.html"

[auth.sms]
# Allow/disallow new user signups via SMS to your project.
enable_signup = true
# If enabled, users need to confirm their phone number before signing in.
enable_confirmations = false
# Template for sending a confirmation message to the user's phone number.
template = "Your code is {{ .Code }} ."

[auth.external.apple]
# Apple OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[auth.external.azure]
# Azure OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[auth.external.bitbucket]
# Bitbucket OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.discord]
# Discord OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.facebook]
# Facebook OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.github]
# GitHub OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.gitlab]
# GitLab OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[auth.external.google]
# Google OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.keycloak]
# Keycloak OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""

[auth.external.linkedin]
# LinkedIn OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.notion]
# Notion OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.slack]
# Slack OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.spotify]
# Spotify OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.twitch]
# Twitch OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.twitter]
# Twitter OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.workos]
# WorkOS OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

[auth.external.zoom]
# Zoom OAuth provider is disabled by default.
enabled = false
# OAuth 2.0 client identifier.
client_id = ""
# OAuth 2.0 client secret.
secret = ""
# Overrides the default auth redirectUrl.
redirect_uri = ""

# Use pre-defined map of JWT claims to database columns/values. These can be referenced in RLS policies.
[auth.jwt_map]
# Example: `sub` claim is mapped to the `id` column in the `users` table.
# sub = "users.id" 