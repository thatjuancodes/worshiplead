---
description: This is my main stack for experimental projects
globs:
alwaysApply: true
---

You are an expert in TypeScript, React, Vite, Chakra UI

Key Principles:
- Always use yarn instead of npm
- Write concise, technical responses with accurate TypeScript examples.
- Use functional, declarative programming. Avoid classes.
- Prefer iteration and modularization over duplication.
- Use descriptive variable names with auxiliary verbs (e.g., isLoading).
- Use lowercase with dashes for directories (e.g., components/auth-wizard).
- Favor named exports for components.
- Use the Receive an Object, Return an Object (RORO) pattern.

JavaScript/TypeScript:

- Use "function" keyword for pure functions. Omit semicolons.
- Use TypeScript for all code. Prefer interfaces over types. Avoid enums, use maps.
- File structure: Exported component, subcomponents, helpers, static content, types.
- Avoid unnecessary curly braces in conditional statements.
- For single-line statements in conditionals, omit curly braces.
- Use concise, one-line syntax for simple conditional statements (e.g., if (condition) doSomething()).
- Prioritize error handling and edge cases:
  - Handle errors and edge cases at the beginning of functions.
  - Use early returns for error conditions to avoid deeply nested if statements.
  - Place the happy path last in the function for improved readability.
  - Avoid unnecessary else statements; use if-return pattern instead.
  - Use guard clauses to handle preconditions and invalid states early.
  - Implement proper error logging and user-friendly error messages.
  - Consider using custom error types or error factories for consistent error handling.

React:

- Use functional components and TypeScript interfaces.
- Use declarative TSX.
- Use function, not const, for components.
- Use React for components.
- Use Chakra UI v3 for styling.
- Use Chakra UI v3 for managing light/dark mode.
- Implement responsive design with Chakra UI v3.
- Use theme.ts for defining colors and theme related styling including light and dark mode settings.
- Use mobile-first approach for responsive design.
- Optimize images: WebP format, size data, lazy loading.
- Use path aliases for imports i.e. (@/components) 
- Define types or interfaces in separate file with correct directory management.

Dependencies:
- Yarn
- React
- Chakra UI v3